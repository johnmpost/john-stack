version: "3.8"

services:
  zitadel:
    restart: "always"
    networks:
      - "zitadel"
    image: "ghcr.io/zitadel/zitadel:latest"
    command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
    environment:
      - "ZITADEL_DATABASE_POSTGRES_HOST=db"
      - "ZITADEL_DATABASE_POSTGRES_PORT=5432"
      - "ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel"
      - "ZITADEL_DATABASE_POSTGRES_USER_USERNAME=zitadel"
      - "ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=zitadel"
      - "ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable"
      - "ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=postgres"
      - "ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD=postgres"
      - "ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable"
      - "ZITADEL_EXTERNALSECURE=false"
      - "ZITADEL_FIRSTINSTANCE_MACHINEKEYPATH=/machinekey/zitadel-admin-sa.json"
      - "ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_USERNAME=zitadel-admin-sa"
      - "ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_NAME=Admin"
      - "ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINEKEY_TYPE=1"
    depends_on:
      db:
        condition: "service_healthy"
    ports:
      - "5003:8080"
    volumes:
      - machinekey:/machinekey

  db:
    restart: "always"
    image: "docker.io/library/postgres:16-alpine"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=zitadel
    networks:
      - "zitadel"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d zitadel -U postgres"]
      interval: "5s"
      timeout: "10s"
      retries: 5
      start_period: "10s"

  volume-setup:
    image: alpine:latest
    container_name: volume-setup
    volumes:
      - machinekey:/machinekey
    command: >
      sh -c "chmod 777 /machinekey && echo 'Permissions set for /machinekey'"
    restart: "no"

networks:
  zitadel:

volumes:
  pgdata:
  machinekey:
